{"version":3,"file":"static/js/101.74def61b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FilmVideo/FilmVideo.module.css?9a09","components/FilmVideo/FilmVideo.jsx","images/play.svg","images/star-full.svg","webpack://react-homework-template/./src/components/FilmPageInfo/filmInfo.module.css?80ac","components/FilmPageInfo/FilmPageInfo.jsx","components/rating/rating.jsx","webpack://react-homework-template/./src/components/castRevBlock/similar/similar.module.css?60b8","components/castRevBlock/similar/Similar.jsx","webpack://react-homework-template/./src/components/castRevBlock/cast/Cast.module.css?e943","components/castRevBlock/cast/Cast.jsx","pages/moviePage/FilmDetails.jsx","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"FilmVideo_modal__68swP\",\"player\":\"FilmVideo_player__u8ndr\",\"playerdiv\":\"FilmVideo_playerdiv__OCFs8\",\"button\":\"FilmVideo_button__DkDzU\",\"nav\":\"FilmVideo_nav__EgI9b\",\"dot\":\"FilmVideo_dot__FQWWl\"};","import ReactPlayer from 'react-player/youtube';\nimport style from './FilmVideo.module.css';\n\nconst FilmVideo = ({ ky, setModal }) => {\n  const BaseUrl = 'https://www.youtube.com/watch?v=';\n  return (\n    <div className={style.modal}>\n      <div className={style.playerdiv}>\n        <div className={style.nav}>\n          <h2 style={{ paddingLeft: '15px' }}>Play Trailer</h2>\n          <button className={style.button} onClick={() => setModal(false)}>\n            X\n          </button>\n        </div>\n        <ReactPlayer\n          className={style.player}\n          controls={true}\n          url={`${BaseUrl}${ky}`}\n          width={1280}\n          height={720}\n          playing={true}\n        />\n      </div>\n    </div>\n  );\n};\nexport default FilmVideo;\n","var _g, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgPlay(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 512,\n    height: 512,\n    viewBox: \"0 0 512 512\",\n    fill: \"aliceblue\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"icomoon-ignore\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M96 64l320 192-320 192z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlay);\nexport default __webpack_public_path__ + \"static/media/play.420edbf9ff09e6375bf53144f719113c.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStarFull(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"white\",\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"star-full\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStarFull);\nexport default __webpack_public_path__ + \"static/media/star-full.4153dbe5fccdacfa932980bcc4cada91.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nexport default {\"filminfoWrap\":\"filmInfo_filminfoWrap__woeLm\",\"filmImg\":\"filmInfo_filmImg__xyC8s\",\"filmInfo\":\"filmInfo_filmInfo__rlF1f\",\"trailerBtn\":\"filmInfo_trailerBtn__zVJIg\",\"Information\":\"filmInfo_Information__7OZ+Y\",\"title\":\"filmInfo_title__2piRk\",\"dot\":\"filmInfo_dot__eGalj\"};","import notFoundImage from 'images/pngegg.png';\nimport play from 'images/play.svg';\nimport star from 'images/star-full.svg';\nimport style from './filmInfo.module.css';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n// import Cast from 'components/castRevBlock/cast/Cast';\n// import Similar from 'components/castRevBlock/similar/Similar';\nimport { useEffect } from 'react';\n\n// import { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMoviesVideo } from '../../service/api';\nexport default function FilmInfo({\n  movieInfo,\n  backLinkLocationRef,\n  setModal,\n  movieVideo,\n  setMovieVideo,\n  id,\n}) {\n  const navigate = useNavigate();\n  useEffect(() => {\n    getMoviesVideo(id)\n      .then(response => {\n        if (response.results.length === 0) {\n          // setMovieVideo(null);\n        }\n        // setMovieVideo(response.results[0].key);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    // .finally(setIsLoading(false));\n  }, [id]);\n\n  const image = movieInfo.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n    : notFoundImage;\n  const bgImage = movieInfo.backdrop_path\n    ? `https://image.tmdb.org/t/p/w1280${movieInfo.backdrop_path}`\n    : null;\n  console.log(movieInfo.id);\n  const time = movieInfo.runtime;\n  let mins = time % 60;\n  let hours = (time - mins) / 60;\n  if (mins < 10) mins = '0' + mins;\n  let newDate = new Date(movieInfo.release_date);\n\n  let rezult = hours + 'h ' + mins + 'm';\n\n  const rate = Math.ceil(movieInfo.vote_average * 10);\n  const genresList = () => movieInfo.genres.map(genre => genre.name).join(', ');\n  return (\n    <div>\n      <div\n        style={{\n          backgroundImage: ` url(${bgImage})`,\n\n          backgroundRepeat: `no-repeat`,\n          backgroundAttachment: `fixed`,\n          backgroundSize: `cover`,\n        }}\n      >\n        <div\n          className={style.filminfoWrap}\n          style={{\n            background: `radial-gradient(circle, rgba(84,82,83,0.9430147058823529) 0%, rgba(10,12,14,1) 100%)`,\n          }}\n        >\n          <NavLink onClick={() => navigate(-1)}> Go back</NavLink>\n\n          <div className={style.filmInfo}>\n            <img src={image} alt={movieInfo.title} className={style.filmImg} />\n            <ul>\n              <li>\n                <h2 className={style.title}>\n                  {movieInfo.original_title}\n                  {'   '}\n                  <span style={{ fontWeight: 100, fontSize: 30 }}>\n                    ({newDate.getFullYear()})\n                  </span>\n                </h2>\n                <div className={style.Information}>\n                  <p>{movieInfo.release_date}</p>\n                  <div className={style.dot}></div>\n                  <p>{genresList()}</p>\n                  <div className={style.dot}></div>\n                  <p>{rezult}</p>\n                </div>\n\n                <p style={{ marginTop: 0 }}>\n                  {' '}\n                  {rate / 10}/10{' '}\n                  <img\n                    src={star}\n                    alt=\"\"\n                    width={15}\n                    height={15}\n                    className={style.playImg}\n                  />{' '}\n                </p>\n              </li>\n              <li>\n                <h3>Overview</h3>\n                <p>{movieInfo.overview}</p>\n              </li>\n              <li>\n                {movieVideo === null ? (\n                  ''\n                ) : (\n                  <button\n                    type=\"button\"\n                    className={style.trailerBtn}\n                    onClick={() => setModal(true)}\n                  >\n                    <img\n                      src={play}\n                      alt=\"\"\n                      width={35}\n                      height={35}\n                      className={style.playImg}\n                    />\n                    Play Trailer\n                  </button>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      {/* <Cast></Cast>\n      <Similar></Similar> */}\n    </div>\n  );\n}\nFilmInfo.propTypes = {\n  movieInfo: PropTypes.object.isRequired,\n  backLinkLocationRef: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    .isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nexport const RatingProgressbar = ({ rating }) => {\n  let rete;\n  if (rating === 0) {\n    rete = 'NR';\n  } else {\n    rete = Math.ceil(rating * 10) / 10;\n  }\n\n  return (\n    <CircularProgressbar\n      value={rating}\n      maxValue={10}\n      text={rete}\n      background\n      backgroundPadding={6}\n      styles={buildStyles({\n        pathColor: rating < 5 ? '#f90032' : rating < 7 ? '#ffa21f' : '#1c936c',\n        height: '100%',\n        width: '100%',\n        textSize: '27px',\n        fontWeight: '500',\n        strokeLinecap: 'butt',\n        transition: 'stroke-dashoffset 0.5s ease 0s',\n        transform: 'rotate(0.25turn)',\n        transformOrigin: 'center center',\n        pathTransitionDuration: 0.5,\n        textColor: 'white',\n        trailColor: '#fff',\n        backgroundColor: 'rgba(0, 0, 0, 0.592)',\n      })}\n      //   styles={buildStyles({\n      //     // Rotation of path and trail, in number of turns (0-1)\n      //     rotation: 0.25,\n      //     height: '100%',\n      //     width: '100%',\n      //     // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n      //     strokeLinecap: 'butt',\n\n      //     // Text size\n      //     textSize: '14px',\n\n      //     // How long animation takes to go from one percentage to another, in seconds\n      //     pathTransitionDuration: 0.5,\n\n      //     // Can specify path transition in more detail, or remove it entirely\n      //     // pathTransition: 'none',\n\n      //     // Colors\n      //     pathColor: rating < 5 ? 'red' : rating < 7 ? 'yellow' : 'green',\n      //     textColor: '#f88',\n      //     trailColor: '#d6d6d6',\n      //     backgroundColor: '#3e98c7',\n      //   })}\n    />\n  );\n};\n\nRatingProgressbar.propTypes = {\n  rating: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"similar_movieList__WHkm5\",\"posterMovie\":\"similar_posterMovie__pwLor\",\"link\":\"similar_link__fMi7n\",\"movieItem\":\"similar_movieItem__+H7GA\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { getSimilar } from 'service/api';\nimport { RatingProgressbar } from 'components/rating/rating';\nimport notFoundImage from 'images/Scrnono.png';\nimport style from './similar.module.css';\nexport default function Similar() {\n  const [similar, setSimilar] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const BaseUrl = `https://image.tmdb.org/t/p/w500/`;\n  console.log(id);\n  useEffect(() => {\n    getSimilar(id)\n      .then(response => {\n        setSimilar(response.results);\n        console.log(response.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Recomended</h2>\n      <ul className={style.movieList}>\n        {similar.map(\n          ({ id, title, original_name, poster_path, vote_average }) => (\n            <li className={style.movieItem} key={id}>\n              <Link\n                className={style.link}\n                to={`/movies/${id}`}\n                reloadDocument\n                state={{ from: location }}\n              >\n                <img\n                  className={style.posterMovie}\n                  src={\n                    poster_path ? BaseUrl.concat(poster_path) : notFoundImage\n                  }\n                  alt=\"\"\n                />\n                <div\n                  style={{\n                    width: 45,\n                    height: 45,\n                    position: 'absolute',\n                    top: 5,\n                    left: 100,\n                  }}\n                >\n                  <RatingProgressbar rating={vote_average}></RatingProgressbar>\n                </div>\n                <p className={style.titleMovie}>{title ?? original_name}</p>\n              </Link>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"CastWrap\":\"Cast_CastWrap__k+G4X\",\"CastItem\":\"Cast_CastItem__BOv3A\",\"actorname\":\"Cast_actorname__v7ZUA\",\"castImg\":\"Cast_castImg__AxV1d\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits } from '../../../service/api';\n// import notFoundImage from 'images/notFoundImage.png';\nimport NoPhoto from 'images/NoPhoto.jpg';\nimport style from './Cast.module.css';\n\nexport default function Cast() {\n  const [castInfo, setCastInfo] = useState([]);\n  const { id } = useParams();\n  // let showedCast;\n\n  // if (window.innerWidth <= 1200) {\n  //   showedCast = castInfo.slice(0, 5);\n  // } else showedCast = castInfo.slice(0, 11);\n  // console.log(showedCast);\n  useEffect(() => {\n    getMovieCredits(id)\n      .then(response => {\n        setCastInfo(response.cast);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [id]);\n\n  return (\n    <div>\n      <h2>Cast</h2>\n\n      <ul className={style.CastWrap}>\n        {castInfo?.map(({ id, name, profile_path, character }) => (\n          <li className={style.CastItem} key={id}>\n            <img\n              width={145}\n              height={175}\n              src={`${\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                  : NoPhoto\n              }`}\n              alt={name}\n              className={style.castImg}\n            />\n\n            <div>\n              <p className={style.actorname}>{name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n        {castInfo?.length === 0 && (\n          <h2>We don't have any cast for this movie</h2>\n        )}\n      </ul>\n    </div>\n  );\n}\n","import { useRef, useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../service/api';\nimport FilmVideo from 'components/FilmVideo/FilmVideo';\nimport Loader from 'components/loader/Loader';\n// import AdditionalInformationWrap from 'components/castRevBlock/castRevBlock';\nimport FilmInfo from 'components/FilmPageInfo/FilmPageInfo';\nimport Similar from 'components/castRevBlock/similar/Similar';\nimport Cast from 'components/castRevBlock/cast/Cast';\nexport default function FilmDetails() {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/Home');\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [movieVideo, setMovieVideo] = useState(null);\n  const [modal, setModal] = useState(false);\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(response => {\n        setMovieInfo(response);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n\n    // getMoviesVideo(id)\n    //   .then(response => {\n    //     setMovieVideo(response.results[0].key);\n    //   })\n    //   .catch(error => {\n    //     console.log(error);\n    //   });\n    // .finally(setIsLoading(false));\n  }, [id]);\n  console.log(movieVideo);\n  return (\n    <>\n      {movieInfo ? (\n        <div style={{ position: 'relative' }}>\n          <FilmInfo\n            id={id}\n            movieInfo={movieInfo}\n            movieVideo={movieVideo}\n            backLinkLocationRef={backLinkLocationRef.current}\n            setModal={setModal}\n            setMovieVideo={setMovieVideo}\n          />\n          {/* <AdditionalInformationWrap /> */}\n          <div className=\"container\">\n            <Cast></Cast>\n            <Similar></Similar>\n          </div>\n          {isLoading && (\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          )}\n          {modal === true ? (\n            <FilmVideo ky={movieVideo} setModal={setModal}></FilmVideo>\n          ) : null}\n        </div>\n      ) : (\n        <h1>No information about this film</h1>\n      )}\n    </>\n  );\n}\n","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6730498ead9b53c83d6423d9a3bbfa5b';\n// 'movie/movie_id/videos?api_key=${API_KEY}&language=en-US'\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getSimilar = async (id) => {\n  const response = await axios.get(`movie/${id}/recommendations?api_key=${API_KEY}&language=en-US&page=1`);\n  return response.data;\n};\n\nexport const getMoviesVideo = async (id) => {\n  const response = await axios.get(\n    `movie/${id}/videos?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["ky","setModal","className","style","paddingLeft","onClick","controls","url","width","height","playing","FilmInfo","movieInfo","backLinkLocationRef","movieVideo","id","setMovieVideo","navigate","useNavigate","useEffect","getMoviesVideo","then","response","results","length","catch","error","console","log","image","poster_path","notFoundImage","bgImage","backdrop_path","time","runtime","mins","hours","newDate","Date","release_date","rezult","rate","Math","ceil","vote_average","backgroundImage","backgroundRepeat","backgroundAttachment","backgroundSize","background","src","alt","title","original_title","fontWeight","fontSize","getFullYear","genres","map","genre","name","join","marginTop","star","overview","type","play","RatingProgressbar","rete","rating","value","maxValue","text","backgroundPadding","styles","buildStyles","pathColor","textSize","strokeLinecap","transition","transform","transformOrigin","pathTransitionDuration","textColor","trailColor","backgroundColor","Similar","useState","similar","setSimilar","useParams","location","useLocation","getSimilar","original_name","to","reloadDocument","state","from","concat","position","top","left","Cast","castInfo","setCastInfo","getMovieCredits","cast","profile_path","character","NoPhoto","FilmDetails","useRef","setMovieInfo","modal","isLoading","setIsLoading","getMovieDetails","current","Suspense","fallback","Loader","axios","API_KEY","getTrending","data","searchMovies","query"],"sourceRoot":""}