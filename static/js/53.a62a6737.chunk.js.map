{"version":3,"file":"static/js/53.a62a6737.chunk.js","mappings":"oPACaA,E,OAA4BC,GAAAA,IAAH,qZ,SCEvB,SAASC,IACtB,OACE,UAACF,EAAD,YACE,oDACA,SAAC,KAAD,CAASG,GAAG,OAAZ,mBACA,SAAC,KAAD,CAASA,GAAG,UAAZ,uBAGL,C,aCVD,EAA+B,+BAA/B,EAAyE,2BCI1D,SAASC,EAAT,GAAuD,IAAnCC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,oBACtCC,EAAQF,EAAUG,YAAV,yCACwBH,EAAUG,aAC5CC,EAEEC,EAAOC,KAAKC,KAA8B,GAAzBP,EAAUQ,cAEjC,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASZ,GAAIG,EAAb,uBACA,iBAAKQ,UAAWC,EAAhB,WACE,gBAAKC,IAAKT,EAAOU,IAAKZ,EAAUa,SAChC,2BACE,2BACE,wBAAKb,EAAUc,kBACf,yCAAiBT,EAAjB,WAEF,2BACE,sCACA,uBAAIL,EAAUe,eAEhB,2BACE,oCACA,uBAjBef,EAAUgB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,mBAuBzE,CC1Bc,SAASC,IAAe,IAAD,IAC9BC,GAAWC,EAAAA,EAAAA,MACXtB,GAAsBuB,EAAAA,EAAAA,QAAM,oBAACF,EAASG,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,SAC3D,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAO3B,EAAP,KAAkB4B,EAAlB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAcA,OAbAC,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAgBP,GACbQ,MAAK,SAAAC,GACJV,EAAaU,EACd,IACAC,OAAM,SAAAC,GACLP,QAAQC,IAAIM,EACb,IACAC,QAAQT,GAAa,GACzB,GAAE,CAACH,KAGF,8BACG7B,GACC,iCACE,SAACD,EAAD,CACE8B,GAAIA,EACJ7B,UAAWA,EACXC,oBAAqBA,EAAoByC,WAE3C,SAAC7C,EAAD,KACA,SAAC,EAAA8C,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,UAIJ,4DAIP,C,+LC3CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAGHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBT,EADmB,yBAElBA,EAASW,MAFS,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCI,EADnC,gCADG,cACpBb,EADoB,yBAInBA,EAASW,MAJU,2CAAH,sDAOZb,EAAe,mCAAG,WAAMP,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,oBACEkB,EADF,oBADM,cACvBT,EADuB,yBAItBA,EAASW,MAJa,2CAAH,sDAOfG,EAAe,mCAAG,WAAMvB,GAAN,uFACNiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACUkB,EADV,oBADM,cACvBT,EADuB,yBAItBA,EAASW,MAJa,2CAAH,sDAOfI,EAAU,mCAAG,WAAMxB,GAAN,uFACDiB,EAAAA,EAAAA,IAAA,gBACZjB,EADY,4BACUkB,EADV,2BADC,cAClBT,EADkB,yBAIjBA,EAASW,MAJQ,2CAAH,qD","sources":["components/castRevBlock/castRevBlock.styled.js","components/castRevBlock/castRevBlock.jsx","webpack://react-homework-template/./src/components/FilmPageInfo/filmInfo.module.css?80ac","components/FilmPageInfo/FilmPageInfo.jsx","pages/moviePage/FilmDetails.jsx","service/api.js"],"sourcesContent":["import styled from 'styled-components';\nexport const AdditionalInformationWrap = styled.div`\n  padding: 20px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #9f79ee;\n  & > h2 {\n    margin: 0;\n    font-size: 35px;\n  }\n  & > a {\n    color: black;\n    font-size: 25px;\n    margin: 10px;\n    text-decoration: none;\n  }\n  & > a.active {\n    color: white;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { AdditionalInformationWrap } from './castRevBlock.styled';\n\nexport default function AdditionalInformation() {\n  return (\n    <AdditionalInformationWrap>\n      <h2>Additional information</h2>\n      <NavLink to=\"cast\">Cast</NavLink>\n      <NavLink to=\"reviews\">Reviews</NavLink>\n    </AdditionalInformationWrap>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filminfoWrap\":\"filmInfo_filminfoWrap__woeLm\",\"filmInfo\":\"filmInfo_filmInfo__rlF1f\"};","import notFoundImage from 'images/notFoundImage.png';\nimport style from './filmInfo.module.css';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function FilmInfo({ movieInfo, backLinkLocationRef }) {\n  const image = movieInfo.poster_path\n    ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n    : notFoundImage;\n\n  const rate = Math.ceil(movieInfo.vote_average * 10);\n  const genresList = () => movieInfo.genres.map(genre => genre.name).join(', ');\n  return (\n    <div className={style.filminfoWrap}>\n      <NavLink to={backLinkLocationRef}> Go back</NavLink>\n      <div className={style.filmInfo}>\n        <img src={image} alt={movieInfo.title} />\n        <ul>\n          <li>\n            <h2>{movieInfo.original_title}</h2>\n            <p>User score : {rate}%</p>\n          </li>\n          <li>\n            <h3>Overview</h3>\n            <p>{movieInfo.overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            <p>{genresList()}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\nFilmInfo.propTypes = {\n  movieInfo: PropTypes.object.isRequired,\n  backLinkLocationRef: PropTypes.oneOfType([PropTypes.string, PropTypes.object])\n    .isRequired,\n};\n","import { useRef, useEffect, useState, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from '../../service/api';\n\nimport Loader from 'components/loader/Loader';\nimport AdditionalInformationWrap from 'components/castRevBlock/castRevBlock';\nimport FilmInfo from 'components/FilmPageInfo/FilmPageInfo';\n\nexport default function FilmDetails() {\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/Home');\n  const [movieInfo, setMovieInfo] = useState(null);\n  const { id } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  console.log(isLoading);\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieDetails(id)\n      .then(response => {\n        setMovieInfo(response);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(setIsLoading(false));\n  }, [id]);\n\n  return (\n    <>\n      {movieInfo ? (\n        <>\n          <FilmInfo\n            id={id}\n            movieInfo={movieInfo}\n            backLinkLocationRef={backLinkLocationRef.current}\n          />\n          <AdditionalInformationWrap />\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </>\n      ) : (\n        <h1>No information about this film</h1>\n      )}\n    </>\n  );\n}\n","\nimport axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '6730498ead9b53c83d6423d9a3bbfa5b';\n\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n"],"names":["AdditionalInformationWrap","styled","AdditionalInformation","to","FilmInfo","movieInfo","backLinkLocationRef","image","poster_path","notFoundImage","rate","Math","ceil","vote_average","className","style","src","alt","title","original_title","overview","genres","map","genre","name","join","FilmDetails","location","useLocation","useRef","state","from","useState","setMovieInfo","id","useParams","isLoading","setIsLoading","console","log","useEffect","getMovieDetails","then","response","catch","error","finally","current","Suspense","fallback","Loader","axios","API_KEY","getTrending","data","searchMovies","query","getMovieCredits","getReviews"],"sourceRoot":""}